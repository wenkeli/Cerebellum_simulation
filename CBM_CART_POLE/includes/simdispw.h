#ifndef SIMDISPW_H
#define SIMDISPW_H

#include <QtGui/QWidget>
#include <QtGui/QPainter>
#include <QtGui/QPaintEvent>
#include <QtGui/QColor>
#include <QtGui/QPixmap>
#include <QtCore/QMutex>
#include <QtCore/QRect>
#include <QtGui/QTransform>
#include "ui_simdispw.h"
#include "common.h"
#include "globalvars.h"

//widget class to display realtime data generated by the simulator
class SimDispW : public QWidget
{
    Q_OBJECT //ignore

public:
    SimDispW(QWidget *parent = 0);
    ~SimDispW();
    //returns the pixmap buffer that should be drawn on
//    QPixmap *getBackBuf();

public slots:
	void drawRaster(vector<bool>, int);
	void drawPSH(vector<unsigned short>, int, bool);
	void drawSCBCPCActs(SCBCPCActs, int);
	void drawIONCPCActs(IONCPCActs, int);
	void drawTotalAct(int, int);
	void drawCSBackground(int);
	void drawBlankDisp();
//	void drawSCBCPCActs(vector<bool>, vector<bool>, vector<bool>, vector<float>);
//	void drawIONCPCActs(vector<bool>, vector<bool>, vector<bool>, vector<float>, vector<float>, vector<float>);

private:
    Ui::SimDispWClass ui; //autogenerated by ui_simdispw.h, ignore
    QPixmap *backBuf; //the pixmap buffer that the widget updates from

protected:
	void paintEvent(QPaintEvent *); //custom paint event that paints the window
};

#endif // SIMDISPW_H
